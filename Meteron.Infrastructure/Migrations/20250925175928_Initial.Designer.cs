// <auto-generated />
using System;
using Meteron.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Meteron.Infrastructure.Migrations
{
    [DbContext(typeof(MeteronDbContext))]
    [Migration("20250925175928_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.9");

            modelBuilder.Entity("Meteron.Domain.Customers.Customer", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Customer", (string)null);

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("Meteron.Domain.Customers.BusinessCustomer", b =>
                {
                    b.HasBaseType("Meteron.Domain.Customers.Customer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("RegistrationNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.ToTable("BusinessCustomer", (string)null);
                });

            modelBuilder.Entity("Meteron.Domain.Customers.HouseholdCustomer", b =>
                {
                    b.HasBaseType("Meteron.Domain.Customers.Customer");

                    b.Property<DateOnly>("DateOfBirth")
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.ToTable("HouseholdCustomer", (string)null);
                });

            modelBuilder.Entity("Meteron.Domain.Customers.BusinessCustomer", b =>
                {
                    b.HasOne("Meteron.Domain.Customers.Customer", null)
                        .WithOne()
                        .HasForeignKey("Meteron.Domain.Customers.BusinessCustomer", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Meteron.Domain.Customers.HouseholdCustomer", b =>
                {
                    b.HasOne("Meteron.Domain.Customers.Customer", null)
                        .WithOne()
                        .HasForeignKey("Meteron.Domain.Customers.HouseholdCustomer", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
